{"version":3,"file":"static/js/415.be2ce4f5.chunk.js","mappings":"oIAAA,IAAMA,EAAM,mCAyDV,IAAMC,EAAM,CACVC,iBAXF,SAA0BC,GACxB,OAAOC,MAAM,sCAAD,OAC4BD,EAD5B,4BACuDH,EADvD,2BAEVK,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,kBACvB,GACF,EAGCC,kBAlCF,SAA2BC,GACzB,OAAOT,MAAM,qDAAD,OAC2CJ,EAD3C,iCACuEa,EADvE,YAEVR,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,oBACvB,GACF,EA0BCG,iBA3DJ,SAA0BC,GAEtB,OAAOX,MAAM,yDAAD,OACiDJ,EADjD,oBAEVK,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,gBAAmBI,EAAnB,eACvB,GACF,EAkDCC,kBAhDF,SAA2Bb,GAGzB,OAAOC,MAAM,sCAAD,OAC8BD,EAD9B,oBACiDH,EADjD,oBAEVK,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,mBACvB,GACF,EAsCCM,iBA3BF,SAA0Bd,GACxB,OAAOC,MAAM,sCAAD,OACwBD,EADxB,4BACmDH,EADnD,oBAEbK,MACG,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,kBACvB,GAEJ,GAmBD,K,0EChEF,EAAuB,mBAAvB,EAAiD,mB,SCGlC,SAASO,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACrCC,QAAQC,IAAIF,GAEZ,IAAMG,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BAEA,eAAIC,UAAWC,EAAf,SACGN,EAAMO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,SAAC,KAAD,CAAeC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMV,GAAnD,SACGM,GACC,eAAIJ,UAAWC,EAAf,SAA0BG,KAE1B,eAAIJ,UAAWC,EAAf,SAA0BI,KAJnBF,EADF,OAYhB,C,mHCrBc,SAASM,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOf,EAAP,KAAcgB,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRnC,EAAAA,EAAAA,mBAAuBI,MAAK,SAAAgC,GAC1B,IAAQC,EAAYD,EAAZC,QAERH,EAASG,EACV,GACF,GAAE,KAGI,iCACP,wBAAI,mBACHnB,IAAS,SAAC,IAAD,CAAcA,MAAOA,MAChC,C","sources":["api/api.jsx","webpack://react-homework-template/./src/components/List/List.module.css?2bcc","components/List/List.jsx","pages/Home.jsx"],"sourcesContent":["const key = 'a76f580e91cd6b2ed7bbe4acd57429cd';\nfunction fetchTrendMovies(newQuery) {\n    // const key = 'a76f580e91cd6b2ed7bbe4acd57429cd';\n    return fetch(\n        `https://api.themoviedb.org/3/trending/all/day?api_key=${key}&language=en-US`\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Movie ${newQuery} not found`));\n    });\n  }\n  \n  function fetchMovieDetails(movieId) {\n    // const key = 'a76f580e91cd6b2ed7bbe4acd57429cd';\n    // const movieId = '603692'\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}&language=en-US`\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Movie not found`));\n    });\n  }\n  function fetchFilmsOnQuery(query) {\n    return fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=1`,\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Movie  not found`));\n    });\n  }\n  function fetchFilmCredits(movieId) {\n    return fetch(\n  `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}&language=en-US`)\n  .then(\n      response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error(`No data  found`));\n      },\n    );\n  }\n  function fetchFilmReviews(movieId) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`,\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`No data  found`));\n    });\n  }\n  const api = {\n    fetchFilmReviews,\n    fetchFilmsOnQuery,\n    fetchTrendMovies,\n    fetchMovieDetails,\n    fetchFilmCredits\n  };\n  \n  export default api;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"List_item__WqTbr\",\"list\":\"List_list__AK7hC\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './List.module.css'\n\nexport default function ListOnSearch({ films }) {\n  console.log(films);\n\n  const location = useLocation();\n  // console.log(location);\n  return (\n    <>\n    \n    <ul className={css.list}>\n      {films.map(({ id, name, title }) => (\n        <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n          {name ? (\n            <li className={css.item}>{name}</li>\n          ) : (\n            <li className={css.item}>{title}</li>\n          )}\n        </Link>\n      ))}\n    </ul>\n    </>\n  );\n}\n\nListOnSearch.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.object),\n};","import ListOnSearch from \"../components/List/List\";\nimport api from \"api/api\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Home() {\n    const [films, setFilms] = useState([]);\n  \n    useEffect(() => {\n      api.fetchTrendMovies().then(data => {\n        const { results } = data;\n        // console.log(results);\n        setFilms(results);\n      });\n    }, []);\n   \n  \n    return <>\n    <h1>Tranding today</h1>\n    {films && <ListOnSearch films={films} />}</>;\n  }\n\n"],"names":["key","api","fetchFilmReviews","movieId","fetch","then","response","ok","json","Promise","reject","Error","fetchFilmsOnQuery","query","fetchTrendMovies","newQuery","fetchMovieDetails","fetchFilmCredits","ListOnSearch","films","console","log","location","useLocation","className","css","map","id","name","title","to","state","from","Home","useState","setFilms","useEffect","data","results"],"sourceRoot":""}