{"version":3,"file":"static/js/168.b994b8d7.chunk.js","mappings":"oIAAA,IAAMA,EAAM,mCAyDV,IAAMC,EAAM,CACVC,iBAXF,SAA0BC,GACxB,OAAOC,MAAM,sCAAD,OAC4BD,EAD5B,4BACuDH,EADvD,2BAEVK,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,kBACvB,GACF,EAGCC,kBAlCF,SAA2BC,GACzB,OAAOT,MAAM,qDAAD,OAC2CJ,EAD3C,iCACuEa,EADvE,YAEVR,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,oBACvB,GACF,EA0BCG,iBA3DJ,SAA0BC,GAEtB,OAAOX,MAAM,yDAAD,OACiDJ,EADjD,oBAEVK,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,gBAAmBI,EAAnB,eACvB,GACF,EAkDCC,kBAhDF,SAA2Bb,GAGzB,OAAOC,MAAM,sCAAD,OAC8BD,EAD9B,oBACiDH,EADjD,oBAEVK,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,mBACvB,GACF,EAsCCM,iBA3BF,SAA0Bd,GACxB,OAAOC,MAAM,sCAAD,OACwBD,EADxB,4BACmDH,EADnD,oBAEbK,MACG,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,kBACvB,GAEJ,GAmBD,K,2GChEF,EAAyB,wBAAzB,EAA2D,yB,SCI5C,SAASO,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAgBG,GAAhB,WACQnB,GAAYoB,EAAAA,EAAAA,MAAZpB,QAcR,OAZAqB,EAAAA,EAAAA,YAAU,WACQ,KAAZrB,IAGJmB,GAAW,GACXrB,EAAAA,EAAAA,iBAAqBE,GAASE,MAAK,SAAAoB,GACjCC,QAAQC,IAAIF,EAAKG,SACjBP,EAAWI,EAAKG,SAChBN,GAAW,EACZ,IACF,GAAE,CAACnB,KAGF,8BACGiB,EAAQS,OAAS,GAChB,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,cAAGC,UAAWC,EAAd,SAA2BF,EAAOG,UAClC,cAAGF,UAAWC,EAAd,SAA4BF,EAAOI,YAF5BJ,EAAOK,GADC,OAQrB,uBAAG,+CAIV,C","sources":["api/api.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["const key = 'a76f580e91cd6b2ed7bbe4acd57429cd';\nfunction fetchTrendMovies(newQuery) {\n    // const key = 'a76f580e91cd6b2ed7bbe4acd57429cd';\n    return fetch(\n        `https://api.themoviedb.org/3/trending/all/day?api_key=${key}&language=en-US`\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Movie ${newQuery} not found`));\n    });\n  }\n  \n  function fetchMovieDetails(movieId) {\n    // const key = 'a76f580e91cd6b2ed7bbe4acd57429cd';\n    // const movieId = '603692'\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}&language=en-US`\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Movie not found`));\n    });\n  }\n  function fetchFilmsOnQuery(query) {\n    return fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=1`,\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Movie  not found`));\n    });\n  }\n  function fetchFilmCredits(movieId) {\n    return fetch(\n  `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}&language=en-US`)\n  .then(\n      response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error(`No data  found`));\n      },\n    );\n  }\n  function fetchFilmReviews(movieId) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`,\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`No data  found`));\n    });\n  }\n  const api = {\n    fetchFilmReviews,\n    fetchFilmsOnQuery,\n    fetchTrendMovies,\n    fetchMovieDetails,\n    fetchFilmCredits\n  };\n  \n  export default api;","// extracted by mini-css-extract-plugin\nexport default {\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\"};","import api from 'api/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Reviews.module.css';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n   // eslint-disable-next-line \n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === '') {\n      return;\n    }\n    setLoading(true);\n    api.fetchFilmReviews(movieId).then(data => {\n      console.log(data.results);\n      setReviews(data.results);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p className={css.author}>{review.author}</p>\n              <p className={css.content}>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We do not have any reviews for this movie</p>\n      )}\n    </>\n  );\n}"],"names":["key","api","fetchFilmReviews","movieId","fetch","then","response","ok","json","Promise","reject","Error","fetchFilmsOnQuery","query","fetchTrendMovies","newQuery","fetchMovieDetails","fetchFilmCredits","Reviews","useState","reviews","setReviews","setLoading","useParams","useEffect","data","console","log","results","length","map","review","className","css","author","content","id"],"sourceRoot":""}