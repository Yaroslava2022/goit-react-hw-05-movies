{"version":3,"file":"static/js/722.8e8d6293.chunk.js","mappings":"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","sources":["api/api.jsx","webpack://react-homework-template/./src/components/List/List.module.css?2bcc","components/List/List.jsx","components/Loader/Loading.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["const key = 'a76f580e91cd6b2ed7bbe4acd57429cd';\nfunction fetchTrendMovies(newQuery) {\n    // const key = 'a76f580e91cd6b2ed7bbe4acd57429cd';\n    return fetch(\n        `https://api.themoviedb.org/3/trending/all/day?api_key=${key}&language=en-US`\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Movie ${newQuery} not found`));\n    });\n  }\n  \n  function fetchMovieDetails(movieId) {\n    // const key = 'a76f580e91cd6b2ed7bbe4acd57429cd';\n    // const movieId = '603692'\n    return fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}&language=en-US`\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Movie not found`));\n    });\n  }\n  function fetchFilmsOnQuery(query) {\n    return fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=1`,\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Movie  not found`));\n    });\n  }\n  function fetchFilmCredits(movieId) {\n    return fetch(\n  `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}&language=en-US`)\n  .then(\n      response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error(`No data  found`));\n      },\n    );\n  }\n  function fetchFilmReviews(movieId) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`,\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`No data  found`));\n    });\n  }\n  const api = {\n    fetchFilmReviews,\n    fetchFilmsOnQuery,\n    fetchTrendMovies,\n    fetchMovieDetails,\n    fetchFilmCredits\n  };\n  \n  export default api;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"List_item__WqTbr\",\"list\":\"List_list__AK7hC\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './List.module.css'\n\nexport default function ListOnSearch({ films }) {\n  console.log(films);\n\n  const location = useLocation();\n  // console.log(location);\n  return (\n    <>\n    \n    <ul className={css.list}>\n      {films.map(({ id, name, title }) => (\n        <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n          {name ? (\n            <li className={css.item}>{name}</li>\n          ) : (\n            <li className={css.item}>{title}</li>\n          )}\n        </Link>\n      ))}\n    </ul>\n    </>\n  );\n}\n\nListOnSearch.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.object),\n};","// import Loader from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\n// export default function Loading() {\n//   const style = {\n//     position: 'fixed',\n//     top: '50%',\n//     left: '50%',\n//     transform: 'translate(-50%, -50%)',\n//     zIndex: '99',\n//   };\n//   return (\n//     <div style={style}>\n//       <Loader\n//         type=\"Puff\"\n//         color=\"#00BFFF\"\n//         height={100}\n//         width={100}\n//         timeout={3000} \n//       />\n//     </div>\n//   );\n// }\n\nexport default function Loading() {\n    return(\n        <div>Loading...</div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"input\":\"SearchForm_input__HOxJo\",\"button\":\"SearchForm_button__UXY06\"};","import Notiflix from \"notiflix\";\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport css from './SearchForm.module.css';\n\nexport default function SearchForm() {\n  const [query, setQuery] = useState('');\n  // eslint-disable-next-line \n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onChangeHandler = e => {\n    console.log(e.target.value);\n    setQuery(e.target.value);\n  };\n\n  const onFormSubmitHandler = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n       Notiflix.Notify.failure('Enter your  query');\n    }\n\n    const params = { query };\n\n    setSearchParams(params);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={onFormSubmitHandler} className={css.form}>\n      <label>\n        <input\n          type=\"text\"\n          value={query}\n          placeholder=\"Enter  your query\"\n          onChange={onChangeHandler}\n          className={css.input}\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Search\n      </button>\n    </form>\n  );\n}\n// SearchForm.propTypes = {\n//   onSubmit: PropTypes.func,\n// };","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n// import css from './Movies.module.css';\nimport PropTypes from 'prop-types';\nimport ListOnSearch from '../components/List/List';\nimport api from 'api/api';\nimport Loading from 'components/Loader/Loading';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nexport default function Movies() {\n  const [films, setFilms] = useState([]);\n  // eslint-disable-next-line \n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query') || '';\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    console.log('запит змінився');\n    fetchOnQuery(searchQuery);\n    // eslint-disable-next-line \n  }, [searchQuery]);\n\n  const fetchOnQuery = queryFilms => {\n    const { fetchFilmsOnQuery } = api;\n    if (!queryFilms) {\n      return;\n    }\n    console.log('query  film for render');\n    setLoading(true);\n    fetchFilmsOnQuery(queryFilms)\n      .then(data => {\n        if (data.results.length === 0) {\n          console.log('no  films');\n          Notiflix.Notify.failure('No  films  found');\n          return;\n        }\n        console.log(data.results);\n        setFilms(data.results);\n        setLoading(false);\n        setSearchParams({ query: searchQuery });\n      })\n      .catch(error => setError(error));\n  };\n    return (\n          <>\n                 <SearchForm/>\n                 {loading && <Loading />}\n                 {films && <ListOnSearch films={films} />} \n                 </>\n                );\n    \n        \n\n}\n\nMovies.propTypes = {\nonSubmit: PropTypes.func,\n};"],"names":["key","api","fetchFilmReviews","movieId","fetch","then","response","ok","json","Promise","reject","Error","fetchFilmsOnQuery","query","fetchTrendMovies","newQuery","fetchMovieDetails","fetchFilmCredits","ListOnSearch","films","console","log","location","useLocation","className","css","map","id","name","title","to","state","from","Loading","SearchForm","useState","setQuery","useSearchParams","setSearchParams","onSubmit","e","preventDefault","trim","Notiflix","type","value","placeholder","onChange","target","Movies","setFilms","setError","loading","setLoading","searchParams","searchQuery","get","useEffect","fetchOnQuery","queryFilms","data","results","length","catch","error","List"],"sourceRoot":""}